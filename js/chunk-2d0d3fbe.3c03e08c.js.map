{"version":3,"sources":["webpack:///./node_modules/@iconify/vue2/dist/iconify.mjs"],"names":["matchIconName","stringToIcon","value","validate","allowSimpleName","provider","arguments","length","undefined","colonSeparated","split","slice","shift","name2","pop","prefix","result","name","validateIconName","dashSeparated","join","icon","match","defaultIconDimensions","Object","freeze","left","top","width","height","defaultIconTransformations","rotate","vFlip","hFlip","defaultIconProps","_objectSpread","defaultExtendedIconProps","body","hidden","mergeIconTransformations","obj1","obj2","mergeIconData","parent","child","key","getIconsTree","data","names","icons","aliases","create","resolved","resolve","concat","keys","forEach","internalGetIconData","tree","currentProps","parse","parseIconSet","callback","_typeof","not_found","Array","push","item","optionalPropertyDefaults","checkOptionalProps","defaults","prop","quicklyValidateIconSet","obj","dataStorage","newStorage","missing","Set","getStorage","providerStorage","addIconSet","storage","add","addIconToStorage","err","simpleNames","allowSimpleNames","allow","getIconData","iconName","has","addIcon","addCollection","added","defaultIconSizeCustomisations","defaultIconCustomisations","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","isUnsetKeyword","iconToSVG","customisations","fullIcon","fullCustomisations","box","props","tempValue","transformations","rotation","toString","floor","unshift","customisationsWidth","customisationsHeight","boxWidth","boxHeight","attributes","setAttr","viewBox","regex","randomPrefix","Date","now","random","counter","replaceIDs","ids","exec","suffix","id","newID","escapedID","replace","RegExp","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","detectFetch","fetch","fetchModule","calculateMaxLength","maxHostLength","host","max","url","shouldAbort","status","prepare","results","maxLength","type","getPath","send","params","iconsList","urlParams","URLSearchParams","uri","defaultError","then","response","json","setTimeout","catch","fetchAPIModule","sortIcons","loaded","pending","sort","a","b","localeCompare","lastIcon","list","localStorage","removeCallback","storages","items","loaderCallbacks","filter","row","updateCallbacks","pendingCallbacksFlag","hasPending","oldLength","abort","idCounter","storeCallback","pendingSources","bind","listToIcons","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","nextIndex","lastError","startTime","queriesSent","timer","queue","doneCallbacks","resetTimer","clearTimeout","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","moduleResponse","isError","queued","execNext","indexOf","resource","status2","initRedundancy","cfg","queries","cleanup","queryCallback","doneCallback","query2","error","find","instance","setIndex","getIndex","emptyCallback$1","redundancyCache","getRedundancyCache","redundancy","cachedReundancy","sendAPIQuery","target","api","cached","moduleKey","browserCacheVersion","browserCachePrefix","browserCacheCountKey","browserCacheVersionKey","browserStorageHour","browserStorageCacheExpiration","getStoredItem","func","getItem","setStoredItem","setItem","removeStoredItem","removeItem","setBrowserStorageItemsCount","getBrowserStorageItemsCount","parseInt","browserStorageConfig","local","session","browserStorageEmptyItems","browserStorageStatus","setBrowserStorageStatus","_window","window","getBrowserStorage","attr","iterateBrowserStorage","version","total2","i","minTime","parseItem","JSON","total","initBrowserStorage","iconSet","lastModified","lastModifiedCached","min","updateLastModified","lastValue","storeInBrowserStorage","store","set","delete","from","stringify","assign","emptyCallback","loadedNewIcons","iconsLoaderFlag","loadNewIcons","iconsToLoad","iconsQueueFlag","icons2","parsed","pendingIcons","console","loadIcons","cleanedIcons","sortedIcons","callCallback","lastProvider","lastPrefix","newIcons","sources","providerNewIcons","pendingQueue","mergeCustomisations","valueType","separator","flipFromString","custom","flip","str","trim","rotateFromString","defaultValue","units","value2","defaultExtendedIconCustomisations","inline","svgDefaults","customisationAliases","render","createElement","contextData","componentProps","style","color","alias","verticalAlign","localCounter","attrs","domProps","innerHTML","class","document","IconifyPreload","preload","e","IconifyProviders","providers","emptyIcon","Icon","Vue","extend","inheritAttrs","iconMounted","beforeMount","this","_name","_loadingIcon","beforeDestroy","abortLoading","methods","getIcon","onload","_this","$forceUpdate","classes","$attrs","context","$data","onLoad"],"mappings":"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","file":"js/chunk-2d0d3fbe.3c03e08c.js","sourcesContent":["import Vue from 'vue';\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  ...defaultIconSizeCustomisations,\n  ...defaultIconTransformations\n});\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  attributes.viewBox = box.left.toString() + \" \" + box.top.toString() + \" \" + boxWidth.toString() + \" \" + boxHeight.toString();\n  return {\n    attributes,\n    body\n  };\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n      \"$1\" + newID + suffix + \"$3\"\n    );\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    resources,\n    path: source.path || \"/\",\n    maxURL: source.maxURL || 500,\n    rotate: source.rotate || 750,\n    timeout: source.timeout || 5e3,\n    random: source.random === true,\n    index: source.index || 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\n\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {\n  }\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {\n  }\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {\n  }\n}\n\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\n\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */ new Set(),\n  session: /* @__PURE__ */ new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\n\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  browserStorageConfig[key] = false;\n}\n\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = (index) => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && callback(data, index)) {\n        return true;\n      }\n    } catch (err) {\n    }\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\n\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, (item) => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(\n        provider,\n        prefix\n      );\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\n\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (lastValue && lastValue >= lastModified) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, (item) => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (!setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(\n      func,\n      browserCachePrefix + index.toString(),\n      JSON.stringify(item)\n    );\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data) => {\n          if (typeof data !== \"object\") {\n            item.icons.forEach((name) => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(\n                storage,\n                data\n              );\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach((name) => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const { provider, prefix } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\n\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nconst defaultExtendedIconCustomisations = {\n    ...defaultIconCustomisations,\n    inline: false,\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Aliases for customisations.\n * In Vue 'v-' properties are reserved, so v-flip must be renamed\n */\nconst customisationAliases = {};\n['horizontal', 'vertical'].forEach((prefix) => {\n    const attr = prefix.slice(0, 1) + 'Flip';\n    // vertical-flip\n    customisationAliases[prefix + '-flip'] = attr;\n    // v-flip\n    customisationAliases[prefix.slice(0, 1) + '-flip'] = attr;\n    // verticalFlip\n    customisationAliases[prefix + 'Flip'] = attr;\n});\n/**\n * Render icon\n */\nconst render = (createElement, \n// context.props\nprops, \n// context.data\ncontextData, \n// Icon must be validated before calling this function\nicon) => {\n    // Split properties\n    const customisations = mergeCustomisations(defaultExtendedIconCustomisations, props);\n    const componentProps = { ...svgDefaults };\n    // Style in Vue 2 components is always passed to rendered component, so no point in parsing it\n    const style = {};\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'onLoad':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Color: override style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                // Vue transforms 'aria-hidden' property to 'ariaHidden'\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            default:\n                const alias = customisationAliases[key];\n                if (alias) {\n                    // Aliases for boolean customisations\n                    if (value === true || value === 'true' || value === 1) {\n                        customisations[alias] = true;\n                    }\n                }\n                else if (defaultExtendedIconCustomisations[key] === void 0) {\n                    // Copy missing property if it does not exist in customisations\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    // Add icon stuff\n    for (let key in item.attributes) {\n        componentProps[key] = item.attributes[key];\n    }\n    if (customisations.inline) {\n        style.verticalAlign = '-0.125em';\n    }\n    // Counter for ids based on \"id\" property to render icons consistently on server and client\n    let localCounter = 0;\n    let id = props.id;\n    if (typeof id === 'string') {\n        // Convert '-' to '_' to avoid errors in animations\n        id = id.replace(/-/g, '_');\n    }\n    // Generate node data\n    const data = {\n        attrs: componentProps,\n        domProps: {\n            innerHTML: replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyVue'),\n        },\n    };\n    if (Object.keys(style).length > 0) {\n        data.style = style;\n    }\n    if (contextData) {\n        ['on', 'ref'].forEach((attr) => {\n            if (contextData[attr] !== void 0) {\n                data[attr] = contextData[attr];\n            }\n        });\n        ['staticClass', 'class'].forEach((attr) => {\n            if (contextData[attr] !== void 0) {\n                data.class = contextData[attr];\n            }\n        });\n    }\n    // Render icon\n    return createElement('svg', data);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    initBrowserStorage();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\n/**\n * Empty icon data, rendered when icon is not available\n */\nconst emptyIcon = {\n    body: '',\n};\nconst Icon = Vue.extend({\n    // Do not inherit other attributes: it is handled by render()\n    // In Vue 2 style is still passed!\n    inheritAttrs: false,\n    // Set initial data\n    data() {\n        return {\n            // Mounted status\n            iconMounted: false,\n        };\n    },\n    beforeMount() {\n        // Current icon name\n        this._name = '';\n        // Loading\n        this._loadingIcon = null;\n        // Mark as mounted\n        this.iconMounted = true;\n    },\n    beforeDestroy() {\n        this.abortLoading();\n    },\n    methods: {\n        abortLoading() {\n            if (this._loadingIcon) {\n                this._loadingIcon.abort();\n                this._loadingIcon = null;\n            }\n        },\n        // Get data for icon to render or null\n        getIcon(icon, onload) {\n            // Icon is an object\n            if (typeof icon === 'object' &&\n                icon !== null &&\n                typeof icon.body === 'string') {\n                // Stop loading\n                this._name = '';\n                this.abortLoading();\n                return {\n                    data: icon,\n                };\n            }\n            // Invalid icon?\n            let iconName;\n            if (typeof icon !== 'string' ||\n                (iconName = stringToIcon(icon, false, true)) === null) {\n                this.abortLoading();\n                return null;\n            }\n            // Load icon\n            const data = getIconData(iconName);\n            if (!data) {\n                // Icon data is not available\n                if (!this._loadingIcon || this._loadingIcon.name !== icon) {\n                    // New icon to load\n                    this.abortLoading();\n                    this._name = '';\n                    if (data !== null) {\n                        // Icon was not loaded\n                        this._loadingIcon = {\n                            name: icon,\n                            abort: loadIcons([iconName], () => {\n                                this.$forceUpdate();\n                            }),\n                        };\n                    }\n                }\n                return null;\n            }\n            // Icon data is available\n            this.abortLoading();\n            if (this._name !== icon) {\n                this._name = icon;\n                if (onload) {\n                    onload(icon);\n                }\n            }\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            return { data, classes };\n        },\n    },\n    // Render icon\n    render(createElement) {\n        const props = Object.assign({}, this.$attrs);\n        let context = this.$data;\n        // Get icon data\n        const icon = this.iconMounted\n            ? this.getIcon(props.icon, props.onLoad)\n            : null;\n        // Validate icon object\n        if (!icon) {\n            return render(createElement, props, context, emptyIcon);\n        }\n        // Add classes\n        if (icon.classes) {\n            context = {\n                ...context,\n                class: (typeof context['class'] === 'string'\n                    ? context['class'] + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render(createElement, props, context, icon.data);\n    },\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n};\n\nexport { Icon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs };\n"],"sourceRoot":""}